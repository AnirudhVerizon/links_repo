 @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getIntent() != null && !getIntent().getAction().equalsIgnoreCase(PageControllerUtils.INTENT_ACTION_MVM_TEST_SCREEN)) {
            return;
        }

        Constants.sslCertExpCheck = false;
        Constants.sslCertPinFail = false;
        DeviceUtils.setOrientationBasedOnDevice(this);
        setContentView(R.layout.activity_test_screen);
        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
        mvmSettings = MVMSettings.getInstance(getApplicationContext());
        String version;
        try {
            version = getPackageManager().getPackageInfo(getPackageName(), 0).versionName;
        } catch (Exception e1) {
            version = "1.0.0";
        }
        TextView productFlavor = (TextView)findViewById(R.id.productFlavor);
        productFlavor.setText("Product flavor is "+getProductFlavor(getApplicationContext()));
        urls = getResources().getStringArray(R.array.url_array);
        mfURLS = getResources().getStringArray(R.array.mf_server_array);
        mf_preapyURLS = getResources().getStringArray(R.array.prepay_mf_server_array);
        speedTestURLS = getResources().getStringArray(R.array.speedTest_server);
        assistTouchURLS = getResources().getStringArray(R.array.assist_touch_server_array);
        mfNsaURLS = getResources().getStringArray(R.array.mf_nsa_server_array);
        shopPccTestingUrls = getResources().getStringArray(R.array.shop_pcc_testing);

        // setup server spinner
        serverURLSpinner = (Spinner) findViewById(R.id.EnterMdnTestScreen_Server);
        serverUrlArrayNames = Arrays.asList(getResources().getStringArray(R.array.Server_url_array));
        ArrayAdapter<CharSequence> adapterServer = ArrayAdapter.createFromResource(this, R.array.Server_url_array, android.R.layout.simple_spinner_item);
        adapterServer.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        serverURLSpinner.setAdapter(adapterServer);
        serverURLSpinner.setSelection(1);
        OnServerSelectedListener spinnerServerListener = new OnServerSelectedListener(this, adapterServer);

        serverURLSpinner.setOnItemSelectedListener(spinnerServerListener);

        redirectToSpinner = findViewById(R.id.redirectTo);
        ArrayAdapter<CharSequence> adapterRedirectTo = ArrayAdapter.createFromResource(this, R.array.redirect_to_array, android.R.layout.simple_spinner_item);
        adapterRedirectTo.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        redirectToSpinner.setAdapter(adapterRedirectTo);
        redirectToSpinner.setSelection(0);

        OnRedirectToSelectedListener redirectToSelectedListener = new OnRedirectToSelectedListener(this, adapterRedirectTo);
        redirectToSpinner.setOnItemSelectedListener(redirectToSelectedListener);



        Spinner selectDeploymentTypeSpinner;


        selectDeploymentTypeSpinner = findViewById(R.id.selectDeploymentTypeSpinner);
        ArrayAdapter<CharSequence> deploymentTypeAdapter = ArrayAdapter.createFromResource(
                this,
                R.array.deployment_type_array,
                android.R.layout.simple_spinner_item
        );
        deploymentTypeAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        selectDeploymentTypeSpinner.setAdapter(deploymentTypeAdapter);


        class OnDeploymentTypeSelectedListener implements AdapterView.OnItemSelectedListener {

            private final ArrayAdapter<CharSequence> mfServerAdapter;
            private final ArrayAdapter<CharSequence> redirectToAdapter;
            private final ArrayAdapter<CharSequence> nsaMfServerAdapter;
            private final Activity activity;


            public OnDeploymentTypeSelectedListener(Activity activity,
                                                    ArrayAdapter<CharSequence> mfServerAdapter,
                                                    ArrayAdapter<CharSequence> redirectToAdapter,
                                                    ArrayAdapter<CharSequence> nsaMfServerAdapter) {
                this.activity = activity;
                this.mfServerAdapter = mfServerAdapter;
                this.redirectToAdapter = redirectToAdapter;
                this.nsaMfServerAdapter = nsaMfServerAdapter;
            }

            @Override

            public void onItemSelected(AdapterView<?> parent, View view, int position, long row) {
                String selectedDeploymentType = parent.getItemAtPosition(position).toString();
                Map<String, String[]> deploymentMappings = DeploymentMappingsUtil.getDeploymentMappings();

                if (deploymentMappings.containsKey(selectedDeploymentType)) {
                    String[] autofillValues = deploymentMappings.get(selectedDeploymentType);

                    // Autofill selectmfserver spinner
                    Spinner mfServerSpinner = activity.findViewById(R.id.selectmfserver);
                    int mfServerPosition = mfServerAdapter.getPosition(autofillValues[0]);
                    mfServerSpinner.setSelection(mfServerPosition);

                    // Autofill redirectTo spinner
                    Spinner redirectToSpinner = activity.findViewById(R.id.redirectTo);
                    int redirectToPosition = redirectToAdapter.getPosition(autofillValues[1]);
                    redirectToSpinner.setSelection(redirectToPosition);

                    // Autofill select_nsa_mfserver spinner
                    Spinner nsaMfServerSpinner = activity.findViewById(R.id.select_nsa_mfserver);
                    int nsaMfServerPosition = nsaMfServerAdapter.getPosition(autofillValues[2]);
                    nsaMfServerSpinner.setSelection(nsaMfServerPosition);
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
                // No action needed when nothing is selected
            }
        }

        Spinner deploymentTypeSpinner = findViewById(R.id.selectDeploymentTypeSpinner);
        ArrayAdapter<CharSequence> mfServerAdapter = ArrayAdapter.createFromResource(this, R.array.mf_server_mapping, android.R.layout.simple_spinner_item);
        ArrayAdapter<CharSequence> redirectToAdapter = ArrayAdapter.createFromResource(this, R.array.redirect_to_array, android.R.layout.simple_spinner_item);
        ArrayAdapter<CharSequence> nsaMfServerAdapter = ArrayAdapter.createFromResource(this, R.array.mf_nsa_server_mapping, android.R.layout.simple_spinner_item);

        deploymentTypeSpinner.setOnItemSelectedListener(new OnDeploymentTypeSelectedListener(this, mfServerAdapter, redirectToAdapter, nsaMfServerAdapter));


        testMDN_editText = (EditText) findViewById(R.id.testMDN_editText);
        version_editText = (EditText) findViewById(R.id.version);
        carrierName_editText = (EditText) findViewById(R.id.carrier_name);
        punchoutUrl = (EditText) findViewById(R.id.punchoutUrl);


        //testMDN_editText.setText("7324919596");
        // Mobile First Param Setting
        toggleButtonMFswitch = (ToggleButton) findViewById(R.id.toggleButtonMFswitch);
        toggleButtonAnalyticSwitch = (ToggleButton) findViewById(R.id.toggleButtonAnalyticswitch);
        analyticsTagValdationwitch = (ToggleButton) findViewById(R.id.analyticsTagValdationwitch);
        crashRecordingSwitch = (ToggleButton)findViewById(R.id.crashRecordingswitch);
        sslCerPinErroSwitch = (ToggleButton)findViewById(R.id.sslCerPinErroSwitch);
        sslCertExpSwitch = (ToggleButton)findViewById(R.id.sslCertExpSwitch);
        sslPinningOn = (ToggleButton)findViewById(R.id.sslPinningOn);
        cb_api_key_header = (ToggleButton)findViewById(R.id.api_key_header);



        selectedMFURL = (EditText) findViewById(R.id.selectedMFURL);
        selectedNsaMFURL = (EditText) findViewById(R.id.selected_nsa_MFURL);
        selectedPccTestUrl = (EditText) findViewById(R.id.selected_pcc_test_url);

        selected_prepay_MFURL = (EditText) findViewById(R.id.selectedMFURL_prepay);
        selectedAssistTouchURL = (EditText) findViewById(R.id.selected_assist_touch_url);
        ArrayAdapter<CharSequence> mfadapter = ArrayAdapter.createFromResource(this, R.array.mf_server_mapping, android.R.layout.simple_spinner_item);
        mfadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        selectmfserver = (Spinner) findViewById(R.id.selectmfserver);
        selectmfserver.setAdapter(mfadapter);
        selectmfserver.setSelection(1);
