<LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:layout_marginBottom="20dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="Deployment Type"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/selectDeploymentTypeSpinner"
                        android:layout_width="0dp"
                        android:layout_marginLeft="20dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"
                        android:spinnerMode="dropdown"
                        android:entries="@array/deployment_type_array" />
                </LinearLayout>



                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="MOBILE FIRST PARAMETER"
                    android:textAppearance="?android:attr/textAppearanceLarge" />

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="Select Server"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/selectmfserver"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"></Spinner>
                </LinearLayout>

                <EditText
                    android:id="@+id/selectedMFURL"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:inputType="text"></EditText>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="Redirect To"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/redirectTo"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"></Spinner>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="Select DVS"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/selectdvs"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"></Spinner>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="Select AM"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/selectAM"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"></Spinner>

                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="Select MCOM"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/selectMCOM"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"></Spinner>

                </LinearLayout>


                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:gravity="center">

                    <TextView
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="NSA"
                        android:textStyle="bold"></TextView>

                    <Spinner
                        android:id="@+id/select_nsa_mfserver"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="2"></Spinner>
                </LinearLayout>

                <EditText
                    android:id="@+id/selected_nsa_MFURL"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:inputType="text"></EditText>


public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getIntent() != null && !getIntent().getAction().equalsIgnoreCase(PageControllerUtils.INTENT_ACTION_MVM_TEST_SCREEN)) {
            return;
        }

        Constants.sslCertExpCheck = false;
        Constants.sslCertPinFail = false;
        DeviceUtils.setOrientationBasedOnDevice(this);
        setContentView(R.layout.activity_test_screen);
        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
        mvmSettings = MVMSettings.getInstance(getApplicationContext());
        String version;
        try {
            version = getPackageManager().getPackageInfo(getPackageName(), 0).versionName;
        } catch (Exception e1) {
            version = "1.0.0";
        }
        TextView productFlavor = (TextView)findViewById(R.id.productFlavor);
        productFlavor.setText("Product flavor is "+getProductFlavor(getApplicationContext()));
        urls = getResources().getStringArray(R.array.url_array);
        mfURLS = getResources().getStringArray(R.array.mf_server_array);
        mf_preapyURLS = getResources().getStringArray(R.array.prepay_mf_server_array);
        speedTestURLS = getResources().getStringArray(R.array.speedTest_server);
        assistTouchURLS = getResources().getStringArray(R.array.assist_touch_server_array);
        mfNsaURLS = getResources().getStringArray(R.array.mf_nsa_server_array);
        shopPccTestingUrls = getResources().getStringArray(R.array.shop_pcc_testing);

        // setup server spinner
        serverURLSpinner = (Spinner) findViewById(R.id.EnterMdnTestScreen_Server);
        serverUrlArrayNames = Arrays.asList(getResources().getStringArray(R.array.Server_url_array));
        ArrayAdapter<CharSequence> adapterServer = ArrayAdapter.createFromResource(this, R.array.Server_url_array, android.R.layout.simple_spinner_item);
        adapterServer.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        serverURLSpinner.setAdapter(adapterServer);
        serverURLSpinner.setSelection(1);
        OnServerSelectedListener spinnerServerListener = new OnServerSelectedListener(this, adapterServer);

        serverURLSpinner.setOnItemSelectedListener(spinnerServerListener);

        redirectToSpinner = findViewById(R.id.redirectTo);
        ArrayAdapter<CharSequence> adapterRedirectTo = ArrayAdapter.createFromResource(this, R.array.redirect_to_array, android.R.layout.simple_spinner_item);
        adapterRedirectTo.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        redirectToSpinner.setAdapter(adapterRedirectTo);
        redirectToSpinner.setSelection(0);

        OnRedirectToSelectedListener redirectToSelectedListener = new OnRedirectToSelectedListener(this, adapterRedirectTo);
        redirectToSpinner.setOnItemSelectedListener(redirectToSelectedListener);

        //Anirudh Changes

        Spinner selectDeploymentTypeSpinner;

        // Initialize the spinner for "Select Deployment Type"
        selectDeploymentTypeSpinner = findViewById(R.id.selectDeploymentTypeSpinner);
        ArrayAdapter<CharSequence> deploymentTypeAdapter = ArrayAdapter.createFromResource(
                this,
                R.array.deployment_type_array,
                android.R.layout.simple_spinner_item
        );
        deploymentTypeAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        selectDeploymentTypeSpinner.setAdapter(deploymentTypeAdapter);

        // Optional: Add a listener to handle selection changes
        selectDeploymentTypeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                String selectedDeploymentType = parent.getItemAtPosition(position).toString();
                // Handle the selection here if needed
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
                // Handle no selection if needed
            }
        });

        testMDN_editText = (EditText) findViewById(R.id.testMDN_editText);
        version_editText = (EditText) findViewById(R.id.version);
        carrierName_editText = (EditText) findViewById(R.id.carrier_name);
        punchoutUrl = (EditText) findViewById(R.id.punchoutUrl);


        //testMDN_editText.setText("7324919596");
        // Mobile First Param Setting
        toggleButtonMFswitch = (ToggleButton) findViewById(R.id.toggleButtonMFswitch);
        toggleButtonAnalyticSwitch = (ToggleButton) findViewById(R.id.toggleButtonAnalyticswitch);
        analyticsTagValdationwitch = (ToggleButton) findViewById(R.id.analyticsTagValdationwitch);
        crashRecordingSwitch = (ToggleButton)findViewById(R.id.crashRecordingswitch);
        sslCerPinErroSwitch = (ToggleButton)findViewById(R.id.sslCerPinErroSwitch);
        sslCertExpSwitch = (ToggleButton)findViewById(R.id.sslCertExpSwitch);
        sslPinningOn = (ToggleButton)findViewById(R.id.sslPinningOn);
        cb_api_key_header = (ToggleButton)findViewById(R.id.api_key_header);



        selectedMFURL = (EditText) findViewById(R.id.selectedMFURL);
        selectedNsaMFURL = (EditText) findViewById(R.id.selected_nsa_MFURL);
        selectedPccTestUrl = (EditText) findViewById(R.id.selected_pcc_test_url);

        selected_prepay_MFURL = (EditText) findViewById(R.id.selectedMFURL_prepay);
        selectedAssistTouchURL = (EditText) findViewById(R.id.selected_assist_touch_url);
        ArrayAdapter<CharSequence> mfadapter = ArrayAdapter.createFromResource(this, R.array.mf_server_mapping, android.R.layout.simple_spinner_item);
        mfadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        selectmfserver = (Spinner) findViewById(R.id.selectmfserver);
        selectmfserver.setAdapter(mfadapter);
        selectmfserver.setSelection(1);

        onMobileFirstServerChange mobileFirstServerChange = new onMobileFirstServerChange(this, mfadapter);

        selectmfserver.setOnItemSelectedListener(mobileFirstServerChange);


        ArrayAdapter<CharSequence> mfNsaAdapter = ArrayAdapter.createFromResource(this, R.array.mf_nsa_server_mapping, android.R.layout.simple_spinner_item);
        mfNsaAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        selectnsamfserver = (Spinner) findViewById(R.id.select_nsa_mfserver);
        selectnsamfserver.setAdapter(mfNsaAdapter);
        selectnsamfserver.setSelection(0);
        onMobileFirstNsaServerChange mobileFirstNsaServerChange = new onMobileFirstNsaServerChange(this, mfNsaAdapter);
        selectnsamfserver.setOnItemSelectedListener(mobileFirstNsaServerChange);


        ArrayAdapter<CharSequence> mfPccAdapter = ArrayAdapter.createFromResource(this, R.array.shop_pcc_testing, android.R.layout.simple_spinner_item);
        mfPccAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        selectpccspinnerurl = (Spinner) findViewById(R.id.select_pcc_spinner_url);
        selectpccspinnerurl.setAdapter(mfPccAdapter);
        selectpccspinnerurl.setSelection(0);
        onMobileFirstPccTestUrls mobileFirstPccTestUrls = new onMobileFirstPccTestUrls(this, mfPccAdapter);
        selectpccspinnerurl.setOnItemSelectedListener(mobileFirstPccTestUrls);


//Callback for redirect to spinner
    public class OnRedirectToSelectedListener implements AdapterView.OnItemSelectedListener {
        //provide local instances of the adapter and the activity
        ArrayAdapter<CharSequence> adapter;
        Activity activity;

        public OnRedirectToSelectedListener(Activity activity, ArrayAdapter<CharSequence> adapter) {
            this.activity = activity;
            this.adapter = adapter;
        }

        public void onItemSelected(AdapterView<?> parent, View view, int position, long row) {
            String selection = parent.getItemAtPosition(position).toString();
            MVMSettings.getInstance().saveSetting("REDIRECT_CANARY_VALUE", selection, true);
        }

        public void onNothingSelected(AdapterView<?> parent) {
        }
    }

    //Callback for server url spinner
    public class OnServerSelectedListener implements AdapterView.OnItemSelectedListener {
        //provide local instances of the adapter and the activity
        ArrayAdapter<CharSequence> adapter;
        Activity activity;

        public OnServerSelectedListener(Activity activity, ArrayAdapter<CharSequence> adapter) {
            this.activity = activity;
            this.adapter = adapter;
        }

        public void onItemSelected(AdapterView<?> parent, View view, int position, long row) {
            String selection = parent.getItemAtPosition(position).toString();
            serverURL = urls[position];
            serverUrlField.setText(serverURL);
        }

        public void onNothingSelected(AdapterView<?> parent) {
        }
    }



 <string-array name="mf_server_mapping">

        <item>local</item>

        <item>mobile-exp-qa1-west-2</item>
        <item>mobile-exp-qa2</item>
        <item>mobile-exp-qa3</item>
        <item>mobile-exp-qa4</item>
        <item>mobile-exp-east-qa5</item>
        <item>mobile-exp-east-qa6</item>
        <item>mobile-exp-dev5</item>
        <item>mobile-exp-dev6</item>
        <item>mobile-exp-dev7</item>
        <item>mobile-exp-dev8</item>
        <item>mobile-exp-dev9</item>
        <item>mobile-exp-dev10</item>
        <item>mobile-exp-dev1</item>
        <item>mobile-exp-dev12</item>
        <item>nqa</item>
        <item>mobile-exp-qa5</item>
        <item>mobile-exp-qa6</item>
        <item>mobile-exp-qa7</item>
        <item>mobile-exp-qa8</item>
        <item>mobile-exp-qa9</item>
        <item>MF Pre-Prod SDC</item>
        <item>MF Pre-Prod TDC</item>
        <item>MF Prod</item>
        <item>MF Prod staging</item>
        <item>MF Prod exp-aws</item>

        <item>edev5</item>
        <item>edev6</item>
        <item>edev7</item>
        <item>edev8</item>
        <item>eqa5</item>
        <item>eqa6</item>
        <item>eqa7</item>
        <item>eqa8</item>
        <item>wsit2</item>
        <item>wsit1</item>
        <item>wqa2-mvm</item>
        <item>exp-qa1</item>
        <item>exp-qa3</item>
        <item>exp-prod</item>
        <item>mobile-exp-dev11</item>
        <item>mobile-exp-dev2</item>
        <item>mobile-exp-dev3</item>
        <item>mobile-exp-dev4</item>
        <item>mobile-exp-qa9</item>
        <item>mobile-exp-qa10</item>
        <item>mobile-exp-qa11</item>
        <item>mobile-exp-qa12</item>
        <item>apigee</item>
        <item>MF prod exp - TDC</item>
        <item>MF prod exp - SDC</item>
    </string-array>
    <string-array name="mf_server_array">
        <item>http://148.132.28.71:8080</item>

        <item>https://mobile-exp-qa1-west-2.vzw.com</item>
        <item>https://mobile-exp-qa2.vzw.com</item>
        <item>https://mobile-exp-qa3.vzw.com</item>
        <item>https://mobile-exp-qa4.vzw.com</item>
        <item>https://mobile-exp-east-qa5.verizon.com</item>
        <item>https://mobile-exp-east-qa6.verizon.com</item>
        <item>https://mobile-exp-dev5.vzw.com</item>
        <item>https://mobile-exp-dev6.vzw.com</item>
        <item>https://mobile-exp-dev7.vzw.com</item>
        <item>https://mobile-exp-dev8.vzw.com</item>
        <item>https://mobile-exp-dev9.vzw.com</item>
        <item>https://mobile-exp-dev10.vzw.com</item>
        <item>https://mobile-exp-dev1.vzw.com</item>
        <item>https://mobile-exp-dev12.vzw.com</item>
        <item>https://mobile-nqa.vzw.com</item>
        <item>https://mobile-exp-qa5.vzw.com</item>
        <item>https://mobile-exp-qa6.vzw.com</item>
        <item>https://mobile-exp-qa7.vzw.com</item>
        <item>https://mobile-exp-qa8.vzw.com</item>
        <item>https://mobile-exp-qa9.vzw.com</item>
        <item>https://mobile-ppd-west.vzw.com</item>
        <item>https://mobile-ppd-north.vzw.com</item>
        <item>https://mobile.vzw.com</item>
        <item>https://mobilestage.vzw.com</item>
        <item>https://mobile-exp.vzw.com</item>

        <item>https://mobile-edev5.vzw.com</item>
        <item>https://mobile-edev6.vzw.com</item>
        <item>https://mobile-edev7.vzw.com</item>
        <item>https://mobile-edev8.vzw.com</item>
        <item>https://mobile-eqa5.vzw.com</item>
        <item>https://mobile-eqa6.vzw.com</item>
        <item>https://mobile-eqa7.vzw.com</item>
        <item>https://mobile-eqa8.vzw.com</item>
        <item>https://mvm-wsit2.vzw.com</item>
        <item>https://mvm-wsit1.vzw.com</item>
        <item>https://mvm-wqa2.vzw.com</item>
        <item>https://mobile-exp-qa1.vzw.com</item>
        <item>https://mobile-exp-qa3.vzw.com</item>
        <item>https://mobile-exp.vzw.com</item>
        <item>https://mobile-exp-dev11.vzw.com</item>
        <item>https://mobile-exp-dev2.vzw.com</item>
        <item>https://mobile-exp-dev3.vzw.com</item>
        <item>https://mobile-exp-dev4.vzw.com</item>

        <item>https://mobile-exp-qa9.vzw.com</item>
        <item>https://mobile-exp-qa10.vzw.com</item>
        <item>https://mobile-exp-qa11.vzw.com</item>
        <item>https://mobile-exp-qa12.vzw.com</item>

        <item>https://api-uat.verizon.com/h8sv-ec2test-proxy/ec2mf/</item>
        <item>https://mobile-exp-north.vzw.com</item>
        <item>https://mobile-exp-west.vzw.com</item>
    </string-array>

    <string-array name="mf_nsa_server_mapping">
        <item>NSA DC</item>
        <item>NSAE</item>
        <item>NSAW</item>
        <item>SDC</item>
        <item>TDC</item>
        <item>AWS WEST</item>
        <item>AWS</item>
        <item>EKS EAST</item>
        <item>EKS WEST</item>
        <item>BYPASS CDN</item>
        <item>BYPASS CDN AWS WEST</item>
        <item>BYPASS CDN AWS EAST</item>
    </string-array>

    <string-array name="redirect_to_array">
        <item>None</item>
        <item>tdc-canary</item>
        <item>sac-canary</item>
        <item>virginia</item>
        <item>oregon</item>

    </string-array>

    <string-array name="deployment_type_array">
        <item>Prod</item>
        <item>TdcCanary</item>
        <item>SacCanary</item>
        <item>AwsEast</item>
        <item>AwsWest</item>
        <item>TdcCanaryByPassCdn</item>
        <item>SacCanaryByPassCdn</item>
        <item>AwsEastByPassCdn</item>
        <item>AwsWestByPassCdn</item>
    </string-array>



    <string-array name="mf_nsa_server_array">
        <item></item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=nsaeCanary</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=nsawCanary</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=sdc</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=tdc</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=awswest</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=aws</item>
        <item>https://images.verizonwireless.com/prod?dc=tdc</item>
        <item>https://images.verizonwireless.com/prod?dc=sdc</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=aws&amp;byPassCdn=true</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=awswest&amp;byPassCdn=true</item>
        <item>https://www.verizon.com/reusable-content/image.html/?dc=awseast&amp;byPassCdn=true</item>


private fun setCanaryparams(params: MutableList<Cookie>, url: HttpUrl) {
    if (BuildConfig.testScreenFlag) {
        val redirectCanary = MVMSettings.getInstance().getSettingString("REDIRECT_CANARY_VALUE")
        if (!redirectCanary.equals("None", ignoreCase = true)) {
            val redirectcanayvalue =
                MVMSettings.getInstance().getSettingString("REDIRECT_CANARY_VALUE")
            params.add(Cookie.Builder().name("redirect_to").value("$redirectcanayvalue").domain(url.host).build())
            if (StringUtils.isNotEmpty(redirectcanayvalue) && (redirectcanayvalue.equals(
                    "oregon",
                    ignoreCase = true
                ) || redirectcanayvalue.equals("sac-canary", ignoreCase = true))
            ) {
                params.add(Cookie.Builder().name("soedc").value("west").domain(url.host).build())
            } else {
                params.add(Cookie.Builder().name("soedc").value("east").domain(url.host).build())
            }
        }
        val xcanary = MVMSettings.getInstance().getSettingString(Constants.MF_BLUE_GREEN_TEST_ENV)
        if (StringUtils.isNotEmpty(xcanary)) {
            params.add(Cookie.Builder().name("x-canary").value("$xcanary").domain(url.host).build())
        }
    }
}

