{
  "Page": {
    "pageType": "globalSearchTypeahead",
    "template": "globalSearchList",
    "header": {
      "moleculeName": "header",
      "topPadding": 12,
      "bottomPadding": 12,
      "molecule": {
        "moleculeName": "stack",
        "spacing": 12,
        "axis": "horizontal",
        "molecules": [
          {
            "moleculeName": "stackItem",
            "molecule": {
              "moleculeName": "imageButton",
              "image": {
                "moleculeName": "image",
                "image": "bot_header",
                "width": 16,
                "height": 16
              },
              "action": {
                "actionType": "openPanel",
                "extraParameters": {
                  "chatbotSourceType": "hab"
                },
                "panel": "right"
              }
            }
          },
          {
            "moleculeName": "stackItem",
            "molecule": {
              "moleculeName": "link",
              "action": {
                "actionType": "openPanel",
                "extraParameters": {
                  "chatbotSourceType": "hab"
                },
                "panel": "right"
              },
              "title": "Chat with us"
            }
          }
        ]
      }
    },
    "sections": [
      {
        "header": {
          "topPadding": 0,
          "bottomPadding": 12,
          "moleculeName": "sectionHeader",
          "molecule": {
            "moleculeName": "label",
            "fontStyle": "BoldBodyLarge",
            "text": "Search Suggestions"
          }
        },
        "rows": [
          {
            "topPadding": 12,
            "moleculeName": "searchHighlightLabel",
            "text": "iPhone",
            "fontStyle": "RegularBodyLarge",
            "line": {
              "type": "none"
            },
            "action": {
              "actionType": "actions",
              "actions": [
                {
                  "extraParameters": {
                    "browserUrl": "https://www.verizon.com/onesearch/search?q=Apple&lid=sayt&sayt=iphone*&src=wireless&source=MFNative",
                    "screenHeading": "Search"
                  },
                  "actionType": "openPage",
                  "appContext": "mobile/nsa/nos/gw/launchapp/l2",
                  "pageType": "webview"
                },
                {
                  "actionType": "saveSearchHistory",
                  "action": "save",
                  "extraParameters": {
                    "searchInput": "iPhone"
                  }
                }
              ]
            },
            "bottomPadding": 12,
            "accessibilityText": "iPhone",
            "hideArrow": true
          },
          {
            "topPadding": 12,
            "moleculeName": "searchHighlightLabel",
            "text": "iPhone 16",
            "fontStyle": "RegularBodyLarge",
            "line": {
              "type": "none"
            },
            "action": {
              "actionType": "actions",
              "actions": [
                {
                  "extraParameters": {
                    "browserUrl": "https://www.verizon.com/onesearch/search?q=Apple&lid=sayt&sayt=iphone16*&src=wireless&source=MFNative",
                    "screenHeading": "Search"
                  },
                  "actionType": "openPage",
                  "appContext": "mobile/nsa/nos/gw/launchapp/l2",
                  "pageType": "webview"
                },
                {
                  "actionType": "saveSearchHistory",
                  "action": "save",
                  "extraParameters": {
                    "searchInput": "iPhone 16"
                  }
                }
              ]
            },
            "bottomPadding": 12,
            "accessibilityText": "iPhone 16",
            "hideArrow": true
          },
          {
            "topPadding": 12,
            "moleculeName": "searchHighlightLabel",
            "text": "iPhone 16 Pro",
            "fontStyle": "RegularBodyLarge",
            "line": {
              "type": "none"
            },
            "action": {
              "actionType": "actions",
              "actions": [
                {
                  "extraParameters": {
                    "browserUrl": "https://www.verizon.com/onesearch/search?q=Apple&lid=sayt&sayt=iphone16pro*&src=wireless&source=MFNative",
                    "screenHeading": "Search"
                  },
                  "actionType": "openPage",
                  "appContext": "mobile/nsa/nos/gw/launchapp/l2",
                  "pageType": "webview"
                },
                {
                  "actionType": "saveSearchHistory",
                  "action": "save",
                  "extraParameters": {
                    "searchInput": "iPhone 16 pro"
                  }
                }
              ]
            },
            "bottomPadding": 12,
            "accessibilityText": "iPhone 16 Pro",
            "hideArrow": true
          }
        ]
      }
    ]
  }
}


    private fun searchTextFlow(): Flow<String> = callbackFlow {
        val watcher = object : TextWatcher {
            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
                trySend(s.toString()).isSuccess
            }

            override fun afterTextChanged(s: Editable?) {}
        }
        searchResultsView?.addTextChangedListener(watcher)
        awaitClose { searchResultsView?.removeTextChangedListener(watcher) }
    }

    private fun observerSearch() {
        searchTextFlow().debounce(200).filter {
            if (it.isEmpty() && isSearchActive) {
                onSearchListener?.showOrHideOverlay(
                    true,
                    globalSearchListTemplateModel = initialSearchTemplate()
                )
            }
            it.isNotEmpty() && isSearchActive
        }.distinctUntilChanged().onEach { query -> performApiCall(query) }.launchIn(scope)
    }


package com.vzw.atomic.views.molecules

import android.content.Context
import android.os.Parcel
import android.os.Parcelable
import android.util.AttributeSet
import com.vzw.hss.myverizon.atomic.models.atoms.LabelAtomModel
import com.vzw.hss.myverizon.atomic.views.atoms.LabelAtomView

class SearchHighlightLabelView : LabelAtomView {
    constructor (mContext: Context) : super(mContext)
    constructor(mContext: Context, attribute: AttributeSet) : super(mContext, attribute)
    constructor(mContext: Context, attribute: AttributeSet, style: Int) : super(
        mContext,
        attribute,
        style
    )

    override fun applyStyle(model: LabelAtomModel) {
        super.applyStyle(model)
    }


}

Unresolved reference. None of the following candidates is applicable because of receiver type mismatch:
public val LifecycleOwner.lifecycleScope: LifecycleCoroutineScope defined in androidx.lifecycle


Suspend function 'collect' should be called only from a coroutine or another suspend function
public abstract suspend fun collect(
    collector: FlowCollector<T>
): Nothing
Accepts the given collector and emits values into it. To emit values from a shared flow into a specific collector, either collector. emitAll(flow) or collect { ... } SAM-conversion can be used.
A shared flow never completes. A call to Flow. collect or any other terminal operator on a shared flow never completes normally.
It is guaranteed that, by the time the first suspension happens, collect has already subscribed to the SharedFlow and is eligible for receiving emissions. In particular, the following code will always print 1:
val flow = MutableSharedFlow<Int>() launch(start = CoroutineStart. UNDISPATCHED) {   flow. collect { println(1) } } flow. emit(1)




